app: apollo-lambda-app
# serverless.yml

service: apollo-lambda
provider:
  name: aws
  runtime: nodejs10.x
  region: eu-central-1
iamRoleStatements:
  Effect: "Allow"
  Action:
    - "dynamodb:GetItem"
    - "dynamodb:PutItem"
    - "dynamodb:Scan"
    - "dynamodb:DeleteItem"
  Resource:
    Fn::Join:
      - ""
      - - "arn:aws:dynamodb:::"
        - Ref: ArticleTable
resources: # CloudFormation template syntax from here on.
  Resources:
    ArticleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Articles
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: Slug
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
          - AttributeName: Slug
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
functions:
  graphql:
    # this is formatted as <FILENAME>.<HANDLER>
    handler: index.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
          integration: lambda-proxy
      - http:
          path: graphql
          method: get
          cors: true
          integration: lambda-proxy
